/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view.admin;

import java.util.ArrayList;
import java.util.UUID;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Admin;
import model.City;
import model.Community;
import model.Doctor;
import model.Encounter;
import model.Hospital;
import model.House;
import model.MainSystem;
import model.Patient;
import model.PatientDirectory;

/**
 *
 * @author bharv
 */
public class hospitalDetails extends javax.swing.JPanel {

    /**
     * Creates new form hospitalDetails
     */
    Admin admin;
    MainSystem rootDataObj;
    public hospitalDetails(Admin admin, MainSystem rootDataObj) {
        this.admin = admin;
        this.rootDataObj = rootDataObj;
        initComponents();
        populateDropdowns();
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        nameLabel = new javax.swing.JLabel();
        addBtn = new javax.swing.JButton();
        ViewBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();
        searchField = new javax.swing.JTextField();
        cityLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        hospitalTable = new javax.swing.JTable();
        nameLabel2 = new javax.swing.JLabel();
        txtname2 = new javax.swing.JTextField();
        txthospname1 = new javax.swing.JTextField();
        uodateBtn = new javax.swing.JButton();
        searchBtn = new javax.swing.JButton();
        newCityDropdown = new javax.swing.JComboBox<>();
        newDoctorCommunityLabel = new javax.swing.JLabel();
        cityDropdown = new javax.swing.JComboBox<>();
        communityDropdown = new javax.swing.JComboBox<>();
        cityLabel3 = new javax.swing.JLabel();
        newDoctorCommunityLabel1 = new javax.swing.JLabel();
        newCommunityDropdown = new javax.swing.JComboBox<>();

        Title.setFont(new java.awt.Font("Tahoma", 0, 26)); // NOI18N
        Title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Title.setText("Add New Hospital Details Here");

        nameLabel.setText("Hospital Name:");

        addBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        addBtn.setText("Add Hospital");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        ViewBtn.setText("VIEW");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setText("DELETE");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        searchField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFieldActionPerformed(evt);
            }
        });

        cityLabel1.setText("City:");

        hospitalTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Name", "Area Name", "District", "CIty", "PIN Code"
            }
        ));
        jScrollPane1.setViewportView(hospitalTable);

        nameLabel2.setText("Hospital Name:");

        txtname2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtname2ActionPerformed(evt);
            }
        });

        txthospname1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txthospname1ActionPerformed(evt);
            }
        });

        uodateBtn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        uodateBtn.setText("Update Hospital");
        uodateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uodateBtnActionPerformed(evt);
            }
        });

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        newCityDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCityDropdownActionPerformed(evt);
            }
        });

        newDoctorCommunityLabel.setText("Community");

        cityDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cityDropdownActionPerformed(evt);
            }
        });

        cityLabel3.setText("City:");

        newDoctorCommunityLabel1.setText("Community");

        newCommunityDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newCommunityDropdownActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cityLabel1)
                    .addComponent(nameLabel)
                    .addComponent(newDoctorCommunityLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txthospname1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(newCityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(addBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(newCommunityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cityLabel3)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(DeleteBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(ViewBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(nameLabel2)
                                .addComponent(newDoctorCommunityLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(uodateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(searchBtn)
                            .addGap(3, 3, 3))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 729, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtname2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap()))
                    .addComponent(communityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(Title)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(searchField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(searchBtn))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(ViewBtn)
                                            .addComponent(cityLabel1))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(DeleteBtn)
                                            .addComponent(newDoctorCommunityLabel)
                                            .addComponent(newCommunityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(newCityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nameLabel)
                        .addComponent(txthospname1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameLabel2)
                    .addComponent(txtname2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cityLabel3))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(communityDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newDoctorCommunityLabel1))
                .addGap(18, 18, 18)
                .addComponent(uodateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(341, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(1448, 1448, 1448))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedIndex = hospitalTable.getSelectedRow();
        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to be deleted", "Error - No selection", JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
            Hospital selectedHospital = (Hospital) model.getValueAt(selectedIndex, 0);
            this.rootDataObj.deleteRootHospital(selectedHospital);
            JOptionPane.showMessageDialog(this, "Hospital is deleted successfully.");
            populateTable();
        }
        clearFields();
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = hospitalTable.getSelectedRow();
        if(selectedRowIndex < 0 ){
            JOptionPane.showMessageDialog(this, "Please select a row to view");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        Hospital selectedHos = (Hospital) model.getValueAt(selectedRowIndex, 0);
        displayDetails(selectedHos);
    }//GEN-LAST:event_ViewBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        // TODO add your handling code here:
        Hospital newHospital = new Hospital();
        newHospital.setHospitalName(txthospname1.getText());
        newHospital.setHospitalCity(rootDataObj.getRootCityDirectory().get(newCityDropdown.getSelectedIndex()));
        newHospital.setHospitalCommunity(newHospital.getHospitalCity().getCommunityDirectory().get(newCommunityDropdown.getSelectedIndex()));
        this.rootDataObj.getRootHospitalDirectory().add(newHospital);
        populateTable();
        JOptionPane.showMessageDialog(this, "New Hospital saved successfully!");
        txthospname1.setText("");
        newCommunityDropdown.setSelectedIndex(-1);
        newCityDropdown.setSelectedIndex(-1);
    }//GEN-LAST:event_addBtnActionPerformed

    private void displayDetails(Hospital selectedHos) {
        txtname2.setText(selectedHos.getHospitalName());
        cityDropdown.setSelectedIndex(rootDataObj.getRootCityDirectory().indexOf(selectedHos.getHospitalCity()));
        communityDropdown.setSelectedIndex(selectedHos.getHospitalCity().getCommunityDirectory().indexOf(selectedHos.getHospitalCommunity()));

    }
    private void populateDropdowns() {
        ArrayList<City> cityListOptions = rootDataObj.getRootCityDirectory();
        for (City cityOption : cityListOptions) {
            newCityDropdown.addItem(cityOption.toString());
            cityDropdown.addItem(cityOption.toString());
        }
    }
        
    private void txtname2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtname2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtname2ActionPerformed

    private void txthospname1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txthospname1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txthospname1ActionPerformed

    private void uodateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uodateBtnActionPerformed
        // TODO add your handling code here:
        int selectedIndex = hospitalTable.getSelectedRow();
        if (selectedIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to update", "Error - No selection", JOptionPane.WARNING_MESSAGE);
        } else {
            DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
            Hospital selectedHospital = (Hospital) this.rootDataObj.getRootHospitalDirectory().get(selectedIndex);
            selectedHospital.setHospitalName(txtname2.getText());
            City selectedCity = rootDataObj.getRootCityDirectory().get(cityDropdown.getSelectedIndex());
            selectedHospital.setHospitalCity(selectedCity);
            selectedHospital.setHospitalCommunity(selectedCity.getCommunityDirectory().get(communityDropdown.getSelectedIndex()));
            JOptionPane.showMessageDialog(this, "Hospital updated successfully!");
            populateTable();
            clearFields();
        }
    }//GEN-LAST:event_uodateBtnActionPerformed

    private void searchFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchFieldActionPerformed

    private void newCityDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCityDropdownActionPerformed
        // TODO add your handling code here:
        City selectedCity = this.rootDataObj.getRootCityDirectory().get(newCityDropdown.getSelectedIndex());
        newCommunityDropdown.removeAllItems();
         for (Community comm : selectedCity.getCommunityDirectory()) {
            newCommunityDropdown.addItem(comm.toString());
        }
    }//GEN-LAST:event_newCityDropdownActionPerformed

    private void cityDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cityDropdownActionPerformed
        // TODO add your handling code here:
        City selectedCity = this.rootDataObj.getRootCityDirectory().get(cityDropdown.getSelectedIndex());
        communityDropdown.removeAllItems();
         for (Community comm : selectedCity.getCommunityDirectory()) {
            communityDropdown.addItem(comm.toString());
        }
    }//GEN-LAST:event_cityDropdownActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
        hospitalTable.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(searchField.getText()));
    }//GEN-LAST:event_searchBtnActionPerformed

    private void newCommunityDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newCommunityDropdownActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newCommunityDropdownActionPerformed

    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) hospitalTable.getModel();
        model.setRowCount(0);

        for (Hospital hosp: this.rootDataObj.getRootHospitalDirectory()) {
            Object[] row = new Object[5];
            row[0] = hosp;
            row[1] = hosp.getHospitalCommunity().getAreaName();
            row[2] = hosp.getHospitalCommunity().getDistrict();
            row[3] = hosp.getHospitalCity().getCityName();
            row[4] = hosp.getHospitalCity().getPinCode();
            model.addRow(row);
        }
    }

     private void clearFields() {
        txtname2.setText("");
        communityDropdown.setSelectedIndex(-1);
        cityDropdown.setSelectedIndex(-1);
       
    }

     
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JLabel Title;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JButton addBtn;
    private javax.swing.JComboBox<String> cityDropdown;
    private javax.swing.JLabel cityLabel1;
    private javax.swing.JLabel cityLabel3;
    private javax.swing.JComboBox<String> communityDropdown;
    private javax.swing.JTable hospitalTable;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JLabel nameLabel2;
    private javax.swing.JComboBox<String> newCityDropdown;
    private javax.swing.JComboBox<String> newCommunityDropdown;
    private javax.swing.JLabel newDoctorCommunityLabel;
    private javax.swing.JLabel newDoctorCommunityLabel1;
    private javax.swing.JButton searchBtn;
    private javax.swing.JTextField searchField;
    private javax.swing.JTextField txthospname1;
    private javax.swing.JTextField txtname2;
    private javax.swing.JButton uodateBtn;
    // End of variables declaration//GEN-END:variables
}
